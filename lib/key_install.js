// Generated by IcedCoffeeScript 1.6.3-j
(function() {
  var KeyInstall, iced, keyring, make_esc, __iced_k, __iced_k_noop;

  iced = require('iced-coffee-script/lib/coffee-script/iced').runtime;
  __iced_k = __iced_k_noop = function() {};

  make_esc = require('iced-error').make_esc;

  keyring = require('gpg-wrapper').keyring;

  exports.KeyInstall = KeyInstall = (function() {
    function KeyInstall(config, keyset) {
      this.config = config;
      this._keyset = keyset;
    }

    KeyInstall.prototype.run = function(cb) {
      var err, esc, ___iced_passed_deferral, __iced_deferrals, __iced_k;
      __iced_k = __iced_k_noop;
      ___iced_passed_deferral = iced.findDeferral(arguments);
      esc = make_esc(cb, "KeyInstall::run");
      (function(_this) {
        return (function(__iced_k) {
          __iced_deferrals = new iced.Deferrals(__iced_k, {
            parent: ___iced_passed_deferral,
            filename: "/Users/max/src/keybase-node-installer/src/key_install.iced",
            funcname: "KeyInstall.run"
          });
          _this.run2(__iced_deferrals.defer({
            assign_fn: (function() {
              return function() {
                return err = arguments[0];
              };
            })(),
            lineno: 17
          }));
          __iced_deferrals._fulfill();
        });
      })(this)((function(_this) {
        return function() {
          (function(__iced_k) {
            __iced_deferrals = new iced.Deferrals(__iced_k, {
              parent: ___iced_passed_deferral,
              filename: "/Users/max/src/keybase-node-installer/src/key_install.iced",
              funcname: "KeyInstall.run"
            });
            _this.cleanup(__iced_deferrals.defer({
              lineno: 18
            }));
            __iced_deferrals._fulfill();
          })(function() {
            return cb(err);
          });
        };
      })(this));
    };

    KeyInstall.prototype.make_tmp_keyring = function(cb) {
      var err, ___iced_passed_deferral, __iced_deferrals, __iced_k;
      __iced_k = __iced_k_noop;
      ___iced_passed_deferral = iced.findDeferral(arguments);
      (function(_this) {
        return (function(__iced_k) {
          __iced_deferrals = new iced.Deferrals(__iced_k, {
            parent: ___iced_passed_deferral,
            filename: "/Users/max/src/keybase-node-installer/src/key_install.iced",
            funcname: "KeyInstall.make_tmp_keyring"
          });
          keyring.TmpKeyRing.make(__iced_deferrals.defer({
            assign_fn: (function(__slot_1) {
              return function() {
                err = arguments[0];
                return __slot_1._tmp_kerying = arguments[1];
              };
            })(_this),
            lineno: 24
          }));
          __iced_deferrals._fulfill();
        });
      })(this)((function(_this) {
        return function() {
          return cb(err);
        };
      })(this));
    };

    KeyInstall.prototype.cleanup = function(cb) {
      var err, ___iced_passed_deferral, __iced_deferrals, __iced_k;
      __iced_k = __iced_k_noop;
      ___iced_passed_deferral = iced.findDeferral(arguments);
      (function(_this) {
        return (function(__iced_k) {
          if (_this._tmp_kerying) {
            (function(__iced_k) {
              __iced_deferrals = new iced.Deferrals(__iced_k, {
                parent: ___iced_passed_deferral,
                filename: "/Users/max/src/keybase-node-installer/src/key_install.iced",
                funcname: "KeyInstall.cleanup"
              });
              _this._tmp_keyring.nuke(__iced_deferrals.defer({
                assign_fn: (function() {
                  return function() {
                    return err = arguments[0];
                  };
                })(),
                lineno: 31
              }));
              __iced_deferrals._fulfill();
            })(function() {
              return __iced_k(typeof err !== "undefined" && err !== null ? log.warn("Error cleaning up temporary keyring: " + err.message) : void 0);
            });
          } else {
            return __iced_k();
          }
        });
      })(this)((function(_this) {
        return function() {
          return cb();
        };
      })(this));
    };

    KeyInstall.prototype.run2 = function(cb) {
      var esc, ___iced_passed_deferral, __iced_deferrals, __iced_k;
      __iced_k = __iced_k_noop;
      ___iced_passed_deferral = iced.findDeferral(arguments);
      esc = make_esc(cb, "KeyInstall:run2");
      (function(_this) {
        return (function(__iced_k) {
          __iced_deferrals = new iced.Deferrals(__iced_k, {
            parent: ___iced_passed_deferral,
            filename: "/Users/max/src/keybase-node-installer/src/key_install.iced",
            funcname: "KeyInstall.run2"
          });
          _this.make_tmp_keyring(esc(__iced_deferrals.defer({
            lineno: 40
          })));
          __iced_deferrals._fulfill();
        });
      })(this)((function(_this) {
        return function() {
          (function(__iced_k) {
            __iced_deferrals = new iced.Deferrals(__iced_k, {
              parent: ___iced_passed_deferral,
              filename: "/Users/max/src/keybase-node-installer/src/key_install.iced",
              funcname: "KeyInstall.run2"
            });
            _this.temporary_import(esc(__iced_deferrals.defer({
              lineno: 41
            })));
            __iced_deferrals._fulfill();
          })(function() {
            (function(__iced_k) {
              __iced_deferrals = new iced.Deferrals(__iced_k, {
                parent: ___iced_passed_deferral,
                filename: "/Users/max/src/keybase-node-installer/src/key_install.iced",
                funcname: "KeyInstall.run2"
              });
              _this.check_self_sig(esc(__iced_deferrals.defer({
                lineno: 42
              })));
              __iced_deferrals._fulfill();
            })(function() {
              (function(__iced_k) {
                __iced_deferrals = new iced.Deferrals(__iced_k, {
                  parent: ___iced_passed_deferral,
                  filename: "/Users/max/src/keybase-node-installer/src/key_install.iced",
                  funcname: "KeyInstall.run2"
                });
                _this.full_import(esc(__iced_deferrals.defer({
                  lineno: 43
                })));
                __iced_deferrals._fulfill();
              })(function() {
                return cb(null);
              });
            });
          });
        };
      })(this));
    };

    return KeyInstall;

  })();

}).call(this);
